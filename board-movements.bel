(def checkbounds (v max)
  (or (<= 0 v (- max 1)) (ret 'impossible-move)))

(tem robot pos 0 dir -i)

(def coords (r)
  (list (rpart r!pos) (ipart r!pos)))

(def quit (r)
  (ret (coords r)))

(def move (r f)
  (zap + r!pos (f r!dir)))

(def forward (r)
  (move r idfn))

(def backward (r)
  (move r inv))

(def turn (r angle)
  (zap * r!dir angle))

(def turncw (r)
  (turn r +i))

(def turnccw (r)
  (turn r -i))

(set actions `(
  (0 . ,quit)
  (1 . ,forward)
  (2 . ,backward)
  (3 . ,turncw)
  (4 . ,turnccw)))

(mac bindret body
  (letu v
    `(ccc (fn (,v)
       (bind ret ,v
         ,@body)))))

(def run ((w h) (x y) cmds)
  (bindret
    (let r (make robot pos (+ x (* +i y)))
      (map [runcmd r w h _] cmds)
      (coords r))))

(def runcmd (r w h cmd)
  (aif (get cmd actions)
       (let action (cdr it)
         (action r)
         (checkbounds r!x w)
         (checkbounds r!y h))
       (ret 'illegal-command)))
